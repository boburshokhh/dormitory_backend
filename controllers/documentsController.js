const { query } = require('../config/database')
const { uploadFile, getFileUrl } = require('../config/minio')

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º pdfmake –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
let pdfMake = null
let QRCode = null

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è pdfmake
const initPdfMake = async () => {
  if (!pdfMake) {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º require –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å CommonJS
      const pdfMakeModule = require('pdfmake/build/pdfmake')
      const pdfFontsModule = require('pdfmake/build/vfs_fonts')
      const qrcodeModule = require('qrcode')

      pdfMake = pdfMakeModule
      QRCode = qrcodeModule

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç—ã
      pdfMake.vfs = pdfFontsModule.pdfMake ? pdfFontsModule.pdfMake.vfs : pdfFontsModule.vfs || {}

      if (!pdfMake.vfs) pdfMake.vfs = {}
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ pdfmake:', error)
      throw error
    }
  }
  return { pdfMake, QRCode }
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞
const generateQRCode = async (text) => {
  try {
    const { QRCode } = await initPdfMake()
    return await QRCode.toDataURL(text, {
      width: 100,
      margin: 1,
      color: {
        dark: '#000000',
        light: '#FFFFFF',
      },
    })
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞:', error)
    return null
  }
}

// –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
const formatBirthDate = (value) => {
  if (!value) return '¬´___¬ª________ 20__ –≥'
  const months = [
    '—è–Ω–≤–∞—Ä—è',
    '—Ñ–µ–≤—Ä–∞–ª—è',
    '–º–∞—Ä—Ç–∞',
    '–∞–ø—Ä–µ–ª—è',
    '–º–∞—è',
    '–∏—é–Ω—è',
    '–∏—é–ª—è',
    '–∞–≤–≥—É—Å—Ç–∞',
    '—Å–µ–Ω—Ç—è–±—Ä—è',
    '–æ–∫—Ç—è–±—Ä—è',
    '–Ω–æ—è–±—Ä—è',
    '–¥–µ–∫–∞–±—Ä—è',
  ]
  const d = new Date(value)
  if (isNaN(d.getTime())) return '¬´___¬ª________ 20__ –≥'
  const day = String(d.getDate()).padStart(2, '0')
  const month = months[d.getMonth()]
  const year = d.getFullYear()
  return `¬´${day}¬ª ${month} ${year} –≥`
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –¥–æ–∫—É–º–µ–Ω—Ç–∞
const generateDormitoryDirectionPDF = async (data) => {
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º pdfmake
    const { pdfMake } = await initPdfMake()

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    const baseUrl = process.env.VERIFICATION_BASE_URL || 'https://dormitory-gubkin.netlify.app'
    const verificationUrl = `${baseUrl}/verify/${data.documentId}`
    console.log('üì± QR –∫–æ–¥ URL:', verificationUrl)
    const qrCodeDataURL = await generateQRCode(verificationUrl)

    const docDefinition = {
      pageSize: 'A4',
      pageMargins: [85, 57, 43, 57], // –ª–µ–≤–æ–µ 3—Å–º, –≤–µ—Ä—Ö 2—Å–º, –ø—Ä–∞–≤–æ–µ 1.5—Å–º, –Ω–∏–∑ 2—Å–º

      defaultStyle: {
        fontSize: 14,
        lineHeight: 1.08,
        alignment: 'justify',
      },

      content: [
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        {
          text: `–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ –î–ü–° ‚Ññ${data.dormitoryNumber || '____'}`,
          style: 'header',
          alignment: 'center',
          margin: [0, 0, 0, 20],
        },

        // –í–≤–æ–¥–Ω–∞—è —Ñ—Ä–∞–∑–∞
        {
          text: '–ü—Ä–æ—à—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ –≤ –î–ü–° —Å—Ç—É–¥–µ–Ω—Ç—É:',
          margin: [0, 0, 0, 15],
        },

        // –§–ò–û —Å—Ç—É–¥–µ–Ω—Ç–∞
        {
          text: `–§.–ò.–û.: ${data.fullName || '________________________________'}`,
          margin: [0, 0, 0, 8],
        },

        // –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
        {
          text: `–¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è ${formatBirthDate(data.birthDate)}`,
          margin: [0, 0, 0, 8],
        },

        // –ê–¥—Ä–µ—Å (—Å–ª–æ–≤–æ "–∞–¥—Ä–µ—Å" 14pt, —Å–∫–æ–±–∫–∏ 10pt, –∑–Ω–∞—á–µ–Ω–∏–µ 14pt)
        {
          text: [
            { text: '–∞–¥—Ä–µ—Å ', style: 'addressValue' },
            { text: '(–º–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è; —Ä–µ–≥–∏–æ–Ω, —Ä–∞–π–æ–Ω, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤): ', style: 'addressLabel' },
            { text: data.address || '____________________________', style: 'addressValue' },
          ],
          margin: [0, 0, 0, 8],
        },

        // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
        {
          text: ' ',
          margin: [0, 0, 0, 8],
        },

        // –§–∞–∫—É–ª—å—Ç–µ—Ç
        {
          text: `–§–∞–∫—É–ª—å—Ç–µ—Ç: ${data.faculty || '________________'}`,
          margin: [0, 0, 0, 8],
        },

        // –ö—É—Ä—Å –∏ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã (–±–µ–∑ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–π)
        {
          text: `–ö—É—Ä—Å: ${data.course || '____'}   ‚Ññ –≥—Ä—É–ø–ø—ã: ${data.groupNumber || '____________'}`,
          margin: [0, 0, 0, 8],
        },

        // –§–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è
        {
          text: `–§–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è: ${data.studyForm || '–æ—á–Ω–∞—è'}`,
          margin: [0, 0, 0, 8],
        },

        // –û—Å–Ω–æ–≤–∞–Ω–∏–µ
        {
          text: `–û—Å–Ω–æ–≤–∞–Ω–∏–µ: –∏–Ω–æ–≥–æ—Ä–æ–¥–Ω–∏–π`,
          margin: [0, 0, 0, 8],
        },

        // –ë–ª–æ–∫ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –û—Å–Ω–æ–≤–∞–Ω–∏—è
        { text: `–î–ü–° ‚Ññ: ${data.dormitoryNumber || '____'}`, margin: [0, 0, 0, 8] },
        { text: `–≠—Ç–∞–∂: ${data.floor || '____'}`, margin: [0, 0, 0, 8] },
        {
          text: `–ö–æ–º–Ω–∞—Ç–∞ ‚Ññ: ${data.room || '____'}`,
          margin: [0, 0, 0, 8],
        },

        // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
        {
          text: ' ',
          margin: [0, 0, 0, 8],
        },

        // –ü–µ—Ä–∏–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è
        {
          text: `–ü–µ—Ä–∏–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: 2025-2026 —É—á–µ–±–Ω—ã–π –≥–æ–¥.`,
          margin: [0, 0, 0, 30],
        },

        // –ü–æ–¥–ø–∏—Å–∏ –∏ –ø–µ—á–∞—Ç—å
        {
          columns: [
            {
              width: '70%',
              stack: [
                {
                  text: '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ñ–∏—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ________________________',
                  margin: [0, 0, 0, 5],
                },
                {
                  text: ' ',
                  margin: [0, 0, 0, 10],
                },
                {
                  text: '–ú.–ü.',
                  margin: [0, 0, 0, 0],
                },
              ],
            },
            {
              width: '30%',
              stack: [
                {
                  text: '_____/–ø–æ–¥–ø–∏—Å—å/',
                  alignment: 'right',
                  fontSize: 10,
                  margin: [0, 0, 0, 5],
                },
              ],
            },
          ],
          margin: [0, 0, 0, 30],
        },

        // QR-–∫–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        qrCodeDataURL
          ? {
              columns: [
                {
                  width: '*',
                  text: '',
                },
                {
                  width: 80,
                  stack: [
                    {
                      image: qrCodeDataURL,
                      width: 60,
                      height: 60,
                      alignment: 'center',
                      margin: [0, 0, 0, 5],
                    },
                    {
                      text: 'QR –∫–æ–¥',
                      fontSize: 8,
                      alignment: 'center',
                      color: '#666666',
                    },
                  ],
                },
              ],
              margin: [0, 10, 0, 0],
            }
          : null,

        // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (—Å–∫—Ä—ã—Ç—ã–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏)
        {
          text: `–î–æ–∫—É–º–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: ${data.generatedAt.toLocaleString('ru-RU')}`,
          fontSize: 8,
          color: '#999999',
          alignment: 'right',
          margin: [0, 20, 0, 0],
        },
        {
          text: `ID –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${data.documentId}`,
          fontSize: 8,
          color: '#999999',
          alignment: 'right',
          margin: [0, 5, 0, 0],
        },
      ].filter(Boolean), // –£–±–∏—Ä–∞–µ–º null —ç–ª–µ–º–µ–Ω—Ç—ã

      styles: {
        header: {
          fontSize: 16,
          bold: true,
          margin: [0, 0, 0, 20],
        },
        addressLabel: {
          fontSize: 10,
        },
        addressValue: {
          fontSize: 14,
        },
      },
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º Buffer
    return new Promise((resolve, reject) => {
      try {
        const pdfDocGenerator = pdfMake.createPdf(docDefinition)
        pdfDocGenerator.getBuffer((pdfData, error) => {
          if (error) {
            console.error('–û—à–∏–±–∫–∞ –≤ getBuffer callback:', error)
            reject(new Error(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF: ${error.message}`))
          } else if (!pdfData) {
            console.error('PDF data –ø—É—Å—Ç–æ–π –∏–ª–∏ undefined')
            reject(new Error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF: –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ'))
          } else {
            console.log('PDF –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã, —Ä–∞–∑–º–µ—Ä:', pdfData.length)
            console.log('–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö:', typeof pdfData)
            console.log('–Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ Buffer:', Buffer.isBuffer(pdfData))

            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ Buffer –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ Buffer
            let buffer
            if (Buffer.isBuffer(pdfData)) {
              buffer = pdfData
            } else if (pdfData instanceof Uint8Array) {
              buffer = Buffer.from(pdfData)
            } else if (typeof pdfData === 'string') {
              buffer = Buffer.from(pdfData, 'binary')
            } else {
              // –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç –≤ Buffer
              buffer = Buffer.from(pdfData)
            }

            console.log('–ò—Ç–æ–≥–æ–≤—ã–π Buffer —Ä–∞–∑–º–µ—Ä:', buffer.length)
            console.log('–ò—Ç–æ–≥–æ–≤—ã–π Buffer —Ç–∏–ø:', typeof buffer)
            console.log('–ò—Ç–æ–≥–æ–≤—ã–π —è–≤–ª—è–µ—Ç—Å—è –ª–∏ Buffer:', Buffer.isBuffer(buffer))
            resolve(buffer)
          }
        })
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ createPdf:', error)
        reject(error)
      }
    })
  } catch (error) {
    console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF:', error)
    throw new Error('–°–µ—Ä–≤–∏—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
  }
}

class DocumentsController {
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ "–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ –î–ü–°"
  async generateDormitoryDirection(req, res) {
    try {
      const { studentId } = req.params
      const generatedBy = req.user.id

      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –±–ª–æ–∫–æ–≤
      const studentQuery = `
        SELECT 
          u.id, u.first_name, u.last_name, u.middle_name, u.birth_date, u.address,
          u.course, u.region,
          g.name as group_name, g.faculty,
          b.id as bed_id, b.bed_number,
          r.room_number, r.block_room_number,
          bl.block_number,
          f.floor_number,
          d.name as dormitory_name, d.type as dormitory_type,
          -- –î–ª—è –î–ü–° 2: —ç—Ç–∞–∂ –±–ª–æ–∫–∞, –¥–ª—è –î–ü–° 1: —ç—Ç–∞–∂ –∫–æ–º–Ω–∞—Ç—ã  
          CASE 
            WHEN d.type = 'type_2' AND bl.id IS NOT NULL THEN bl_f.floor_number
            ELSE f.floor_number
          END as actual_floor_number
        FROM users u
        LEFT JOIN groups g ON u.group_id = g.id AND g.is_active = true
        LEFT JOIN beds b ON u.id = b.student_id AND b.is_active = true
        LEFT JOIN rooms r ON b.room_id = r.id AND r.is_active = true
        LEFT JOIN blocks bl ON r.block_id = bl.id AND bl.is_active = true
        LEFT JOIN floors f ON r.floor_id = f.id AND f.is_active = true
        LEFT JOIN floors bl_f ON bl.floor_id = bl_f.id AND bl_f.is_active = true
        LEFT JOIN dormitories d ON (f.dormitory_id = d.id OR bl_f.dormitory_id = d.id) AND d.is_active = true
        WHERE u.id = $1 AND u.role = 'student'
      `

      const studentResult = await query(studentQuery, [studentId])
      if (studentResult.rows.length === 0) {
        return res.status(404).json({ error: '–°—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' })
      }

      const student = studentResult.rows[0]

      // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–∞
      if (!student.last_name || !student.first_name) {
        return res
          .status(400)
          .json({ error: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—É–¥–µ–Ω—Ç–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞' })
      }

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è PDF —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∫–æ–º–Ω–∞—Ç
      console.log('–î–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ –ë–î:', {
        dormitory_type: student.dormitory_type,
        floor_number: student.floor_number,
        actual_floor_number: student.actual_floor_number,
        room_number: student.room_number,
        block_room_number: student.block_room_number,
        block_number: student.block_number,
      })

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –î–ü–°
      let roomNumber = '___'

      if (
        student.dormitory_type === 'type_2' &&
        student.block_number &&
        student.block_room_number
      ) {
        // –î–ü–° 2: —Ñ–æ—Ä–º–∞—Ç "–±–ª–æ–∫/–∫–æ–º–Ω–∞—Ç–∞" (–Ω–∞–ø—Ä–∏–º–µ—Ä: 301/1)
        roomNumber = `${student.block_number}/${student.block_room_number}`
      } else if (student.dormitory_type === 'type_1' && student.room_number) {
        // –î–ü–° 1: –ø—Ä–æ—Å—Ç–æ –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: 22)
        roomNumber = student.room_number
      }

      const documentData = {
        fullName: `${student.last_name} ${student.first_name} ${student.middle_name || ''}`.trim(),
        birthDate: student.birth_date,
        address: student.address || '–∞–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω',
        faculty: '–ù–µ—Ñ—Ç–µ–≥–∞–∑–æ–≤–æ–µ –¥–µ–ª–æ',
        course: student.course || '___',
        groupNumber: student.group_name || '___',
        studyForm: '–æ—á–Ω–∞—è',
        basis: '–∏–Ω–æ–≥–æ—Ä–æ–¥–Ω–∏–π',
        dormitoryNumber:
          student.dormitory_type === 'type_1'
            ? '1'
            : student.dormitory_type === 'type_2'
              ? '2'
              : '___',
        floor: student.actual_floor_number || student.floor_number || '___',
        room: roomNumber,
        block: student.block_number || '___',
        period: '2025-2026 —É—á–µ–±–Ω—ã–π –≥–æ–¥.',
        contractNumber: '___',
        generatedAt: new Date(),
      }

      console.log('–î–∞–Ω–Ω—ã–µ –¥–ª—è PDF:', {
        dormitoryNumber: documentData.dormitoryNumber,
        floor: documentData.floor,
        room: documentData.room,
        block: documentData.block,
      })

      // –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –≤ –ë–î, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π ID
      const insertQuery = `
        INSERT INTO documents (
          student_id, document_type, file_name, file_path, file_size, 
          mime_type, generated_by, generated_at
        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
        RETURNING *
      `

      const fileName = `dormitory-direction-${student.id}-${Date.now()}.pdf`
      const filePath = `documents/${fileName}`

      const documentResult = await query(insertQuery, [
        studentId,
        'dormitory_direction',
        fileName,
        filePath,
        0, // –í—Ä–µ–º–µ–Ω–Ω–æ 0, –æ–±–Ω–æ–≤–∏–º –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF
        'application/pdf',
        generatedBy,
        new Date(),
      ])

      const document = documentResult.rows[0]

      // –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π documentId –∫ –¥–∞–Ω–Ω—ã–º –¥–ª—è PDF
      documentData.documentId = document.id

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF –∫–∞–∫ Buffer —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º documentId
      const pdfBuffer = await generateDormitoryDirectionPDF(documentData)

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ pdfBuffer –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —è–≤–ª—è–µ—Ç—Å—è Buffer
      if (!Buffer.isBuffer(pdfBuffer)) {
        console.error('pdfBuffer –Ω–µ —è–≤–ª—è–µ—Ç—Å—è Buffer:', typeof pdfBuffer, pdfBuffer)
        throw new Error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö')
      }

      console.log('PDF Buffer —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ, —Ä–∞–∑–º–µ—Ä:', pdfBuffer.length)

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ MinIO
      try {
        await uploadFile(pdfBuffer, filePath, 'application/pdf')
      } catch (minioError) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ MinIO:', minioError)
        throw new Error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ')
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –ë–î
      const updateQuery = `
        UPDATE documents 
        SET file_size = $1 
        WHERE id = $2
      `
      await query(updateQuery, [pdfBuffer.length, document.id])

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –¥–æ–º–µ–Ω–æ–º
      const downloadUrl = `https://files.dormitory.gubkin.uz/upload/${filePath}`

      res.json({
        success: true,
        document: {
          id: document.id,
          fileName: document.file_name,
          fileSize: document.file_size,
          downloadUrl,
          generatedAt: document.generated_at,
        },
      })
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error)

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ—Ç–≤–µ—Ç
      if (error.message.includes('–°–µ—Ä–≤–∏—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')) {
        res.status(503).json({ error: '–°–µ—Ä–≤–∏—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω' })
      } else if (error.message.includes('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞')) {
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞' })
      } else {
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞' })
      }
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞
  async getStudentDocuments(req, res) {
    try {
      const { studentId } = req.params

      const dbQuery = `
        SELECT 
          d.id, d.document_type, d.file_name, d.file_path, d.file_size, d.mime_type,
          d.generated_at, d.created_at, d.status,
          u.first_name, u.last_name, u.middle_name
        FROM documents d
        LEFT JOIN users u ON d.generated_by = u.id
        WHERE d.student_id = $1 AND d.is_active = true
        ORDER BY d.created_at DESC
      `

      const result = await query(dbQuery, [studentId])

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –¥–æ–º–µ–Ω–æ–º
      const documents = result.rows.map((doc) => {
        const downloadUrl = `https://files.dormitory.gubkin.uz/upload/${doc.file_path}`
        return {
          ...doc,
          downloadUrl,
        }
      })

      res.json({ documents })
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:', error)
      res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤' })
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ ID
  async getDocument(req, res) {
    try {
      const { documentId } = req.params

      const dbQuery = `
        SELECT 
          d.id, d.student_id, d.document_type, d.file_name, d.file_path, d.file_size, 
          d.mime_type, d.generated_by, d.generated_at, d.created_at, d.updated_at, d.status,
          u.first_name, u.last_name, u.middle_name as student_name
        FROM documents d
        LEFT JOIN users u ON d.student_id = u.id
        WHERE d.id = $1 AND d.is_active = true
      `

      const result = await query(dbQuery, [documentId])

      if (result.rows.length === 0) {
        return res.status(404).json({ error: '–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' })
      }

      const document = result.rows[0]
      const downloadUrl = `https://files.dormitory.gubkin.uz/upload/${document.file_path}`

      res.json({
        document: {
          ...document,
          downloadUrl,
        },
      })
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error)
      res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞' })
    }
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  async deleteDocument(req, res) {
    try {
      const { documentId } = req.params
      const userId = req.user.id

      console.log('–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞:', { documentId, userId })

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –∏–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å –¥–æ–∫—É–º–µ–Ω—Ç–∞)
      const checkQuery = `
        SELECT generated_by FROM documents WHERE id = $1 AND is_active = true
      `
      const checkResult = await query(checkQuery, [documentId])

      if (checkResult.rows.length === 0) {
        console.log('–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω:', documentId)
        return res.status(404).json({ error: '–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' })
      }

      const document = checkResult.rows[0]
      console.log('–î–æ–∫—É–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω:', {
        documentId,
        generatedBy: document.generated_by,
        currentUser: userId,
      })

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ (–∞–¥–º–∏–Ω –∏–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å –¥–æ–∫—É–º–µ–Ω—Ç–∞)
      const userQuery = `SELECT role FROM users WHERE id = $1`
      const userResult = await query(userQuery, [userId])

      if (userResult.rows.length === 0) {
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω:', userId)
        return res.status(403).json({ error: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω' })
      }

      const user = userResult.rows[0]
      console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', { userId, role: user.role })

      // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤: —Ä–∞–∑—Ä–µ—à–∞–µ–º –∞–¥–º–∏–Ω–∞–º –∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞–º —É–¥–∞–ª—è—Ç—å –ª—é–±—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
      if (user.role === 'admin' || user.role === 'super_admin') {
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω/—Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω, —Ä–∞–∑—Ä–µ—à–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ')
      } else if (document.generated_by && document.generated_by === userId) {
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞—Ç–µ–ª—å –¥–æ–∫—É–º–µ–Ω—Ç–∞, —Ä–∞–∑—Ä–µ—à–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ')
      } else {
        console.log('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤:', {
          userRole: user.role,
          documentCreator: document.generated_by,
          currentUser: userId,
        })
        return res.status(403).json({ error: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞' })
      }

      // –ü–æ–º–µ—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –∫–∞–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π
      const updateQuery = `
        UPDATE documents 
        SET is_active = false, updated_at = NOW() 
        WHERE id = $1
      `
      await query(updateQuery, [documentId])

      console.log('–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω:', documentId)
      res.json({ success: true, message: '–î–æ–∫—É–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω' })
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error)
      res.status(500).json({ error: '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞' })
    }
  }

  // GET /api/documents/verify/:documentId - –ü—É–±–ª–∏—á–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ QR-–∫–æ–¥—É
  async verifyDocument(req, res) {
    try {
      const { documentId } = req.params

      console.log(`üîç –ó–∞–ø—Ä–æ—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${documentId}`)
      console.log(`üì° User-Agent: ${req.headers['user-agent']}`)
      console.log(`üåê IP: ${req.ip}`)

      // –í–∞–ª–∏–¥–∏—Ä—É–µ–º UUID —Ñ–æ—Ä–º–∞—Ç documentId
      const uuidPattern = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/i

      if (!uuidPattern.test(documentId)) {
        console.log(`‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç documentId: ${documentId}`)
        await logVerificationAttempt(
          documentId,
          req.ip,
          req.headers['user-agent'],
          false,
          'invalid_format',
        )

        return res.status(400).json({
          valid: false,
          error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞',
          message:
            'ID –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–ª–∏ QR-–∫–æ–¥.',
        })
      }

      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç—É–¥–µ–Ω—Ç–µ
      const sqlQuery = `
        SELECT 
          d.id, d.document_type, d.file_name, d.generated_at, d.status, d.is_active,
          d.file_path, d.file_size, d.mime_type,
          u.first_name, u.last_name, u.middle_name, u.student_id,
          g.name as group_name, g.faculty,
          admin.first_name as admin_first_name, admin.last_name as admin_last_name
        FROM documents d
        LEFT JOIN users u ON d.student_id = u.id
        LEFT JOIN groups g ON u.group_id = g.id
        LEFT JOIN users admin ON d.generated_by = admin.id
        WHERE d.id = $1 
          AND d.document_type = 'dormitory_direction'
      `

      const result = await query(sqlQuery, [documentId])

      if (result.rows.length === 0) {
        console.log(`‚ùå –î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${documentId}`)
        await logVerificationAttempt(
          documentId,
          req.ip,
          req.headers['user-agent'],
          false,
          'not_found',
        )

        return res.status(404).json({
          valid: false,
          error: '–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',
          message: '–î–æ–∫—É–º–µ–Ω—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω.',
        })
      }

      const document = result.rows[0]

      console.log(`üìã –°—Ç–∞—Ç—É—Å –¥–æ–∫—É–º–µ–Ω—Ç–∞:`, {
        is_active: document.is_active,
        status: document.status,
        document_type: document.document_type,
      })

      if (!document.is_active) {
        console.log(`‚ùå –î–æ–∫—É–º–µ–Ω—Ç –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω: ${documentId}`)
        await logVerificationAttempt(
          documentId,
          req.ip,
          req.headers['user-agent'],
          false,
          'inactive',
        )

        return res.status(410).json({
          valid: false,
          error: '–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω',
          message: '–î–æ–∫—É–º–µ–Ω—Ç –±—ã–ª –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã.',
        })
      }

      // –£—Å–ø–µ—à–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
      console.log(`‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${documentId}`)
      await logVerificationAttempt(documentId, req.ip, req.headers['user-agent'], true, 'success')

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
      const documentUrl = `https://files.dormitory.gubkin.uz/upload/${document.file_path}`

      return res.json({
        valid: true,
        documentId,
        document: {
          id: document.id,
          type: document.document_type,
          fileName: document.file_name,
          fileSize: document.file_size,
          documentUrl,
          generatedAt: document.generated_at,
          student: {
            fullName:
              `${document.last_name} ${document.first_name} ${document.middle_name || ''}`.trim(),
            studentId: document.student_id,
            group: document.group_name,
            faculty: document.faculty,
          },
          generatedBy: {
            fullName: `${document.admin_last_name || ''} ${document.admin_first_name || ''}`.trim(),
          },
        },
      })
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error)
      await logVerificationAttempt(
        req.params.documentId,
        req.ip,
        req.headers['user-agent'],
        false,
        'server_error',
      )

      res.status(500).json({
        valid: false,
        error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      })
    }
  }
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ø—ã—Ç–æ–∫ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–≤—ã–Ω–µ—Å–µ–Ω–æ –∏–∑ –∫–ª–∞—Å—Å–∞)
const logVerificationAttempt = async (
  documentId,
  ipAddress,
  userAgent,
  success,
  errorType = null,
) => {
  try {
    const insertQuery = `
      INSERT INTO document_verifications (
        document_id, ip_address, user_agent, verification_result, error_type, verification_at
      ) VALUES ($1, $2, $3, $4, $5, NOW())
    `

    await query(insertQuery, [documentId, ipAddress, userAgent, success, errorType])
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error)
    // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  }
}

module.exports = new DocumentsController()
